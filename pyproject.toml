[tool.poetry]
name = 'learn_python'
version = "0.1.0"
description = "Python lesson 2 hometask"
authors = ["Ximik <brevno5000@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
python-dateutil = "^2.8.2"
pydantic = "^2.4.2"
email-validator = "^2.0.0.post2"

[tool.poetry.group.lint.dependencies]
black = "^23.3.0"
ruff = "^0.0.291"

[tool.black]
line-length = 120
skip-string-normalization = true

[tool.ruff]
extend-exclude = [
    "*/__init__.py",
]
line-length = 120
ignore = [
    "T201", #  Ignore print only for learn project, don't use on a real one
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN204",
    "ANN401",
    "D105",
    "D107",
    "D200",
    "D204",
    "D413",
    "F722",
    "B904",
]
select = [
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "ERA", # eradicate
    "T20", # flake8-print
    "Q", # flake8-quotes
    "I", # isort
    "N", # pep8-naming
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
]

[tool.ruff.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.field_validator",
    "pydantic.model_validator",
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.isort]
split-on-trailing-comma = true
force-wrap-aliases = true
combine-as-imports = true
lines-after-imports = 2

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"